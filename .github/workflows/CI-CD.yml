name: Java CI/CD with Docker

on:
  push:
    branches:
      - master  # Trigger on push to master branch
  pull_request:
    branches:
      - master  # Trigger on pull request to master branch

jobs:
  # CI job: Run tests on the code
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Specify your Java version

      - name: Run tests with Maven
        run: mvn test  # Assuming you're using Maven to run tests

  # CD job: Build Docker image, push it, and deploy
  deploy:
    runs-on: ubuntu-latest
    needs: test  # This job waits for the test job to complete
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t webshopapi .

      - name: Tag Docker image
        run: |
          docker tag webshopapi:latest jonaseveraard/webshopapi:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push jonaseveraard/webshopapi:latest

      - name: Start API container
        run: |
          docker run -d --name webshopapi -p 8080:8080 jonaseveraard/webshopapi:latest

      - name: Wait for API to be ready with wait-for-it
        run: |
          wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh localhost:8080 --timeout=60 --strict -- echo "API is up and running!"
